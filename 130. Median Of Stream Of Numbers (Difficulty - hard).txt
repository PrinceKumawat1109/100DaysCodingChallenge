#include<bits/stdc++.h>
using namespace std;

void solve(vector<long long int> &v,long long int n){
    priority_queue<double> s;
    priority_queue<double,vector<double>,greater<double> > g;
    double med=0.0;
    for(auto x:v){
        if(x<med){
            if(s.size()>g.size()){
                g.push(s.top());
                s.pop();
                s.push(x);
            }
            else {
                // s.push(g.top());
                // g.pop();
                s.push(x);
            }
           
        }
        else{
           
            if(s.size()<g.size()){
                s.push(g.top());
                g.pop();
                g.push(x);
            }
            else{
             
                g.push(x);
            }}
           if(g.size()>s.size()){
               med=g.top();
           }
           else if(g.size()<s.size()){
               med = s.top();
           }
           else{
               med=(s.top()+g.top())/2;
           }
        cout<<setprecision(2)<<fixed<<med<<" ";
    }
}

int main(){
    int t;
    cin>>t;
    while(t--){
        long long int n;
        cin>>n;
        vector<long long int> v(n);
        for(int i=0;i<n;i++){
            cin>>v[i];
        }
        solve(v,n);
        cout<<"\n";
    }
    return 0;
}